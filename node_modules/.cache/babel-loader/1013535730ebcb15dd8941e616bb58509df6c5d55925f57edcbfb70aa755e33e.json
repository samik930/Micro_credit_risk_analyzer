{"ast":null,"code":"export class RealisticCreditEngine{// Credit Score Calculation (300-900 scale like CIBIL)\nstatic calculateCreditScore(userData){var _loanEligibility$emi_,_loanEligibility$emi_2;const profile=this.buildFinancialProfile(userData);// Component Scores (0-100 each)\nconst paymentHistoryScore=this.calculatePaymentHistoryScore(userData);const creditUtilizationScore=this.calculateCreditUtilizationScore(userData);const incomeStabilityScore=this.calculateIncomeStabilityScore(userData);const digitalBehaviorScore=this.calculateDigitalBehaviorScore(userData);// Weighted Score Calculation\nconst weightedScore=paymentHistoryScore*0.40+creditUtilizationScore*0.25+incomeStabilityScore*0.20+digitalBehaviorScore*0.15;// Convert to 300-900 scale\nconst creditScore=Math.round(300+weightedScore*6);// Determine Risk Band\nconst riskBand=this.getRiskBand(creditScore);// Calculate Default Probability\nconst defaultProbability=this.calculateDefaultProbability(creditScore,userData);// Loan Eligibility\nconst loanEligibility=this.calculateLoanEligibility(userData,creditScore);// Generate Recommendations\nconst recommendations=this.generateRecommendations(userData,profile);// Peer Comparison\nconst percentileRank=this.calculatePercentileRank(creditScore);const peerComparison=this.generatePeerComparison(percentileRank,userData);return{user_id:userData.user_id,credit_score:creditScore,risk_band:riskBand,default_probability:defaultProbability,decision:this.makeDecision(creditScore,defaultProbability),score_components:{payment_history:{score:paymentHistoryScore,weight:40},credit_utilization:{score:creditUtilizationScore,weight:25},income_stability:{score:incomeStabilityScore,weight:20},digital_behavior:{score:digitalBehaviorScore,weight:15}},max_eligible_amount:loanEligibility.max_amount,recommended_emi:((_loanEligibility$emi_=loanEligibility.emi_options[0])===null||_loanEligibility$emi_===void 0?void 0:_loanEligibility$emi_.emi)||0,optimal_tenure_months:loanEligibility.tenure_options[0]||12,improvement_suggestions:recommendations.immediate,financial_coaching:recommendations.coaching,percentile_rank:percentileRank,peer_comparison:peerComparison,rbi_compliant:this.checkRBICompliance(userData,loanEligibility.max_amount),rbi_violations:this.getRBIViolations(userData,loanEligibility.max_amount),emi_to_income_ratio:(((_loanEligibility$emi_2=loanEligibility.emi_options[0])===null||_loanEligibility$emi_2===void 0?void 0:_loanEligibility$emi_2.emi)||0)/userData.monthly_income*100};}// Payment History Score (40% weight)\nstatic calculatePaymentHistoryScore(userData){const billPaymentScore=userData.electricity_bill_on_time*0.3+userData.dth_recharge_on_time*0.2+userData.internet_bill_on_time*0.2+userData.rent_payment_on_time*0.3;const loanRepaymentScore=userData.loan_repayment_history_score;const defaultPenalty=userData.previous_loan_defaults*20;return Math.max(0,Math.min(100,billPaymentScore*0.6+loanRepaymentScore*0.4-defaultPenalty));}// Credit Utilization Score (25% weight)\nstatic calculateCreditUtilizationScore(userData){const debtToIncomeRatio=(userData.existing_loan_emi+userData.credit_card_outstanding*0.05)/userData.monthly_income;const expenseToIncomeRatio=userData.monthly_expenses/userData.monthly_income;// Lower ratios = better score\nconst utilizationScore=Math.max(0,100-debtToIncomeRatio*200);const spendingScore=Math.max(0,100-expenseToIncomeRatio*100);return utilizationScore*0.7+spendingScore*0.3;}// Income Stability Score (20% weight)\nstatic calculateIncomeStabilityScore(userData){const incomeTypeScore={'salary':90,'business':70,'freelance':60,'daily_wage':40}[userData.income_type];const stabilityBonus=Math.min(20,userData.income_stability_months*2);const employmentScore=Math.min(30,userData.years_of_employment*5);const savingsScore=Math.min(25,userData.savings_rate*2.5);return Math.min(100,incomeTypeScore+stabilityBonus+employmentScore+savingsScore);}// Digital Behavior Score (15% weight)\nstatic calculateDigitalBehaviorScore(userData){const upiScore=Math.min(30,userData.upi_transactions_per_month*2);const walletScore=Math.min(25,userData.digital_wallet_usage*2.5);const onlineBillScore=userData.online_bill_payments*0.3;const digitalActivityScore=userData.digital_financial_activity_score*0.15;return upiScore+walletScore+onlineBillScore+digitalActivityScore;}// Risk Band Classification\nstatic getRiskBand(creditScore){if(creditScore>=750)return'Excellent';if(creditScore>=650)return'Good';if(creditScore>=550)return'Fair';if(creditScore>=450)return'Poor';return'Very Poor';}// Default Probability Calculation\nstatic calculateDefaultProbability(creditScore,userData){let baseProbability=Math.max(1,50-(creditScore-300)/12);// Adjust based on specific risk factors\nif(userData.previous_loan_defaults>0)baseProbability+=userData.previous_loan_defaults*15;if(userData.existing_loan_emi/userData.monthly_income>0.5)baseProbability+=10;if(userData.emergency_savings<userData.monthly_expenses)baseProbability+=8;return Math.min(95,Math.max(1,Math.round(baseProbability)));}// Loan Eligibility Calculation\nstatic calculateLoanEligibility(userData,creditScore){const maxEMICapacity=userData.monthly_income*0.4-userData.existing_loan_emi;const baseAmount=Math.min(125000,userData.monthly_income*10);// RBI limit\n// Adjust based on credit score\nconst scoreMultiplier=creditScore>=750?1.0:creditScore>=650?0.8:creditScore>=550?0.6:0.4;const maxAmount=Math.round(baseAmount*scoreMultiplier);const recommendedAmount=Math.round(maxAmount*0.7);const tenureOptions=[12,18,24,36];const interestRate=this.getInterestRate(creditScore);const emiOptions=tenureOptions.map(tenure=>{const monthlyRate=interestRate/100/12;const emi=Math.round(recommendedAmount*monthlyRate*Math.pow(1+monthlyRate,tenure)/(Math.pow(1+monthlyRate,tenure)-1));const totalAmount=emi*tenure;const totalInterest=totalAmount-recommendedAmount;return{tenure,emi,total_interest:totalInterest,total_amount:totalAmount};}).filter(option=>option.emi<=maxEMICapacity);return{eligible:maxAmount>10000&&emiOptions.length>0,max_amount:maxAmount,recommended_amount:recommendedAmount,tenure_options:tenureOptions,interest_rate_range:{min:interestRate,max:interestRate+2},emi_options:emiOptions};}// Interest Rate Based on Credit Score\nstatic getInterestRate(creditScore){if(creditScore>=750)return 18;if(creditScore>=650)return 22;if(creditScore>=550)return 24;return 26;// RBI cap\n}// Generate Personalized Recommendations\nstatic generateRecommendations(userData,profile){const immediate=[];const coaching=[];// Payment History Improvements\nif(userData.overall_bill_payment_score<80){immediate.push(\"Set up auto-pay for all utility bills to improve payment consistency\");coaching.push({priority:'high',action:\"Enable auto-debit for electricity, DTH, and internet bills\",impact:\"Can improve credit score by 30-50 points in 3 months\"});}// EMI Management\nconst emiRatio=userData.existing_loan_emi/userData.monthly_income;if(emiRatio>0.4){immediate.push(\"Your EMI-to-income ratio is \".concat(Math.round(emiRatio*100),\"% (too high). Reduce EMIs below 40% to improve score\"));coaching.push({priority:'high',action:\"Consider loan restructuring or prepayment to reduce EMI burden\",impact:\"Reducing EMI ratio to 30% can improve eligibility by â‚¹25,000\"});}// Digital Behavior\nif(userData.upi_transactions_per_month<20){immediate.push(\"Increase UPI transactions to build stronger digital payment history\");coaching.push({priority:'medium',action:\"Use UPI for daily transactions like groceries, fuel, and small purchases\",impact:\"Higher digital activity can boost score by 15-25 points\"});}// Emergency Savings\nif(userData.emergency_savings<userData.monthly_expenses*3){immediate.push(\"Build emergency fund to \\u20B9\".concat(userData.monthly_expenses*3,\" (3 months expenses)\"));coaching.push({priority:'medium',action:\"Save \\u20B9\".concat(Math.round((userData.monthly_expenses*3-userData.emergency_savings)/6),\" per month for 6 months\"),impact:\"Adequate emergency fund reduces default risk and improves loan terms\"});}// Savings Rate\nif(userData.savings_rate<20){immediate.push(\"Increase savings rate to at least 20% of income for better financial health\");coaching.push({priority:'low',action:\"Track expenses and identify areas to cut discretionary spending\",impact:\"Higher savings rate demonstrates financial discipline\"});}return{immediate,coaching};}// Build Financial Profile\nstatic buildFinancialProfile(userData){return{debt_to_income_ratio:userData.existing_loan_emi*12/(userData.monthly_income*12),savings_to_income_ratio:userData.savings_rate/100,expense_to_income_ratio:userData.monthly_expenses/userData.monthly_income,payment_consistency_score:userData.overall_bill_payment_score,bill_payment_reliability:(userData.electricity_bill_on_time+userData.dth_recharge_on_time+userData.internet_bill_on_time+userData.rent_payment_on_time)/4,loan_repayment_track_record:userData.loan_repayment_history_score,digital_payment_adoption:userData.digital_financial_activity_score,financial_app_usage:userData.digital_wallet_usage,online_banking_activity:userData.online_bill_payments,income_volatility:userData.income_type==='salary'?10:userData.income_type==='business'?30:50,emergency_fund_adequacy:userData.emergency_savings/userData.monthly_expenses*33.33,credit_utilization_pattern:userData.credit_card_outstanding/userData.monthly_income*100};}// Calculate Percentile Rank\nstatic calculatePercentileRank(creditScore){// Simulated distribution based on Indian credit score patterns\nif(creditScore>=800)return 95;if(creditScore>=750)return 85;if(creditScore>=700)return 70;if(creditScore>=650)return 55;if(creditScore>=600)return 40;if(creditScore>=550)return 25;return 10;}// Generate Peer Comparison\nstatic generatePeerComparison(percentileRank,userData){const incomeGroup=userData.monthly_income>=50000?'high-income':userData.monthly_income>=25000?'middle-income':'entry-level';return\"You are better than \".concat(percentileRank,\"% of borrowers in the \").concat(incomeGroup,\" category\");}// Decision Making\nstatic makeDecision(creditScore,defaultProbability){if(creditScore>=650&&defaultProbability<=20)return'Approve';if(creditScore>=550&&defaultProbability<=35)return'Review';return'Reject';}// RBI Compliance Check\nstatic checkRBICompliance(userData,loanAmount){if(loanAmount>125000)return false;// RBI limit\nif(userData.existing_loan_emi/userData.monthly_income>0.5)return false;// EMI ratio\nreturn true;}// RBI Violations\nstatic getRBIViolations(userData,loanAmount){const violations=[];if(loanAmount>125000)violations.push('Loan amount exceeds RBI limit of â‚¹1.25L');if(userData.existing_loan_emi/userData.monthly_income>0.5)violations.push('EMI-to-income ratio exceeds 50%');return violations;}}","map":{"version":3,"names":["RealisticCreditEngine","calculateCreditScore","userData","_loanEligibility$emi_","_loanEligibility$emi_2","profile","buildFinancialProfile","paymentHistoryScore","calculatePaymentHistoryScore","creditUtilizationScore","calculateCreditUtilizationScore","incomeStabilityScore","calculateIncomeStabilityScore","digitalBehaviorScore","calculateDigitalBehaviorScore","weightedScore","creditScore","Math","round","riskBand","getRiskBand","defaultProbability","calculateDefaultProbability","loanEligibility","calculateLoanEligibility","recommendations","generateRecommendations","percentileRank","calculatePercentileRank","peerComparison","generatePeerComparison","user_id","credit_score","risk_band","default_probability","decision","makeDecision","score_components","payment_history","score","weight","credit_utilization","income_stability","digital_behavior","max_eligible_amount","max_amount","recommended_emi","emi_options","emi","optimal_tenure_months","tenure_options","improvement_suggestions","immediate","financial_coaching","coaching","percentile_rank","peer_comparison","rbi_compliant","checkRBICompliance","rbi_violations","getRBIViolations","emi_to_income_ratio","monthly_income","billPaymentScore","electricity_bill_on_time","dth_recharge_on_time","internet_bill_on_time","rent_payment_on_time","loanRepaymentScore","loan_repayment_history_score","defaultPenalty","previous_loan_defaults","max","min","debtToIncomeRatio","existing_loan_emi","credit_card_outstanding","expenseToIncomeRatio","monthly_expenses","utilizationScore","spendingScore","incomeTypeScore","income_type","stabilityBonus","income_stability_months","employmentScore","years_of_employment","savingsScore","savings_rate","upiScore","upi_transactions_per_month","walletScore","digital_wallet_usage","onlineBillScore","online_bill_payments","digitalActivityScore","digital_financial_activity_score","baseProbability","emergency_savings","maxEMICapacity","baseAmount","scoreMultiplier","maxAmount","recommendedAmount","tenureOptions","interestRate","getInterestRate","emiOptions","map","tenure","monthlyRate","pow","totalAmount","totalInterest","total_interest","total_amount","filter","option","eligible","length","recommended_amount","interest_rate_range","overall_bill_payment_score","push","priority","action","impact","emiRatio","concat","debt_to_income_ratio","savings_to_income_ratio","expense_to_income_ratio","payment_consistency_score","bill_payment_reliability","loan_repayment_track_record","digital_payment_adoption","financial_app_usage","online_banking_activity","income_volatility","emergency_fund_adequacy","credit_utilization_pattern","incomeGroup","loanAmount","violations"],"sources":["C:/Projects/micro-credit-risk-analyzer/src/utils/realisticCreditEngine.ts"],"sourcesContent":["import { UserData, RiskScore, FinancialProfile, LoanEligibility, CreditReport } from '../types';\r\n\r\nexport class RealisticCreditEngine {\r\n  \r\n  // Credit Score Calculation (300-900 scale like CIBIL)\r\n  static calculateCreditScore(userData: UserData): RiskScore {\r\n    const profile = this.buildFinancialProfile(userData);\r\n    \r\n    // Component Scores (0-100 each)\r\n    const paymentHistoryScore = this.calculatePaymentHistoryScore(userData);\r\n    const creditUtilizationScore = this.calculateCreditUtilizationScore(userData);\r\n    const incomeStabilityScore = this.calculateIncomeStabilityScore(userData);\r\n    const digitalBehaviorScore = this.calculateDigitalBehaviorScore(userData);\r\n    \r\n    // Weighted Score Calculation\r\n    const weightedScore = \r\n      (paymentHistoryScore * 0.40) +\r\n      (creditUtilizationScore * 0.25) +\r\n      (incomeStabilityScore * 0.20) +\r\n      (digitalBehaviorScore * 0.15);\r\n    \r\n    // Convert to 300-900 scale\r\n    const creditScore = Math.round(300 + (weightedScore * 6));\r\n    \r\n    // Determine Risk Band\r\n    const riskBand = this.getRiskBand(creditScore);\r\n    \r\n    // Calculate Default Probability\r\n    const defaultProbability = this.calculateDefaultProbability(creditScore, userData);\r\n    \r\n    // Loan Eligibility\r\n    const loanEligibility = this.calculateLoanEligibility(userData, creditScore);\r\n    \r\n    // Generate Recommendations\r\n    const recommendations = this.generateRecommendations(userData, profile);\r\n    \r\n    // Peer Comparison\r\n    const percentileRank = this.calculatePercentileRank(creditScore);\r\n    const peerComparison = this.generatePeerComparison(percentileRank, userData);\r\n    \r\n    return {\r\n      user_id: userData.user_id,\r\n      credit_score: creditScore,\r\n      risk_band: riskBand,\r\n      default_probability: defaultProbability,\r\n      decision: this.makeDecision(creditScore, defaultProbability),\r\n      \r\n      score_components: {\r\n        payment_history: { score: paymentHistoryScore, weight: 40 },\r\n        credit_utilization: { score: creditUtilizationScore, weight: 25 },\r\n        income_stability: { score: incomeStabilityScore, weight: 20 },\r\n        digital_behavior: { score: digitalBehaviorScore, weight: 15 }\r\n      },\r\n      \r\n      max_eligible_amount: loanEligibility.max_amount,\r\n      recommended_emi: loanEligibility.emi_options[0]?.emi || 0,\r\n      optimal_tenure_months: loanEligibility.tenure_options[0] || 12,\r\n      \r\n      improvement_suggestions: recommendations.immediate,\r\n      financial_coaching: recommendations.coaching,\r\n      \r\n      percentile_rank: percentileRank,\r\n      peer_comparison: peerComparison,\r\n      \r\n      rbi_compliant: this.checkRBICompliance(userData, loanEligibility.max_amount),\r\n      rbi_violations: this.getRBIViolations(userData, loanEligibility.max_amount),\r\n      emi_to_income_ratio: (loanEligibility.emi_options[0]?.emi || 0) / userData.monthly_income * 100\r\n    };\r\n  }\r\n  \r\n  // Payment History Score (40% weight)\r\n  static calculatePaymentHistoryScore(userData: UserData): number {\r\n    const billPaymentScore = (\r\n      userData.electricity_bill_on_time * 0.3 +\r\n      userData.dth_recharge_on_time * 0.2 +\r\n      userData.internet_bill_on_time * 0.2 +\r\n      userData.rent_payment_on_time * 0.3\r\n    );\r\n    \r\n    const loanRepaymentScore = userData.loan_repayment_history_score;\r\n    const defaultPenalty = userData.previous_loan_defaults * 20;\r\n    \r\n    return Math.max(0, Math.min(100, \r\n      (billPaymentScore * 0.6 + loanRepaymentScore * 0.4) - defaultPenalty\r\n    ));\r\n  }\r\n  \r\n  // Credit Utilization Score (25% weight)\r\n  static calculateCreditUtilizationScore(userData: UserData): number {\r\n    const debtToIncomeRatio = (userData.existing_loan_emi + userData.credit_card_outstanding * 0.05) / userData.monthly_income;\r\n    const expenseToIncomeRatio = userData.monthly_expenses / userData.monthly_income;\r\n    \r\n    // Lower ratios = better score\r\n    const utilizationScore = Math.max(0, 100 - (debtToIncomeRatio * 200));\r\n    const spendingScore = Math.max(0, 100 - (expenseToIncomeRatio * 100));\r\n    \r\n    return (utilizationScore * 0.7 + spendingScore * 0.3);\r\n  }\r\n  \r\n  // Income Stability Score (20% weight)\r\n  static calculateIncomeStabilityScore(userData: UserData): number {\r\n    const incomeTypeScore = {\r\n      'salary': 90,\r\n      'business': 70,\r\n      'freelance': 60,\r\n      'daily_wage': 40\r\n    }[userData.income_type];\r\n    \r\n    const stabilityBonus = Math.min(20, userData.income_stability_months * 2);\r\n    const employmentScore = Math.min(30, userData.years_of_employment * 5);\r\n    const savingsScore = Math.min(25, userData.savings_rate * 2.5);\r\n    \r\n    return Math.min(100, incomeTypeScore + stabilityBonus + employmentScore + savingsScore);\r\n  }\r\n  \r\n  // Digital Behavior Score (15% weight)\r\n  static calculateDigitalBehaviorScore(userData: UserData): number {\r\n    const upiScore = Math.min(30, userData.upi_transactions_per_month * 2);\r\n    const walletScore = Math.min(25, userData.digital_wallet_usage * 2.5);\r\n    const onlineBillScore = userData.online_bill_payments * 0.3;\r\n    const digitalActivityScore = userData.digital_financial_activity_score * 0.15;\r\n    \r\n    return upiScore + walletScore + onlineBillScore + digitalActivityScore;\r\n  }\r\n  \r\n  // Risk Band Classification\r\n  static getRiskBand(creditScore: number): 'Excellent' | 'Good' | 'Fair' | 'Poor' | 'Very Poor' {\r\n    if (creditScore >= 750) return 'Excellent';\r\n    if (creditScore >= 650) return 'Good';\r\n    if (creditScore >= 550) return 'Fair';\r\n    if (creditScore >= 450) return 'Poor';\r\n    return 'Very Poor';\r\n  }\r\n  \r\n  // Default Probability Calculation\r\n  static calculateDefaultProbability(creditScore: number, userData: UserData): number {\r\n    let baseProbability = Math.max(1, 50 - ((creditScore - 300) / 12));\r\n    \r\n    // Adjust based on specific risk factors\r\n    if (userData.previous_loan_defaults > 0) baseProbability += userData.previous_loan_defaults * 15;\r\n    if (userData.existing_loan_emi / userData.monthly_income > 0.5) baseProbability += 10;\r\n    if (userData.emergency_savings < userData.monthly_expenses) baseProbability += 8;\r\n    \r\n    return Math.min(95, Math.max(1, Math.round(baseProbability)));\r\n  }\r\n  \r\n  // Loan Eligibility Calculation\r\n  static calculateLoanEligibility(userData: UserData, creditScore: number): LoanEligibility {\r\n    const maxEMICapacity = userData.monthly_income * 0.4 - userData.existing_loan_emi;\r\n    const baseAmount = Math.min(125000, userData.monthly_income * 10); // RBI limit\r\n    \r\n    // Adjust based on credit score\r\n    const scoreMultiplier = creditScore >= 750 ? 1.0 : \r\n                           creditScore >= 650 ? 0.8 : \r\n                           creditScore >= 550 ? 0.6 : 0.4;\r\n    \r\n    const maxAmount = Math.round(baseAmount * scoreMultiplier);\r\n    const recommendedAmount = Math.round(maxAmount * 0.7);\r\n    \r\n    const tenureOptions = [12, 18, 24, 36];\r\n    const interestRate = this.getInterestRate(creditScore);\r\n    \r\n    const emiOptions = tenureOptions.map(tenure => {\r\n      const monthlyRate = interestRate / 100 / 12;\r\n      const emi = Math.round((recommendedAmount * monthlyRate * Math.pow(1 + monthlyRate, tenure)) / \r\n                            (Math.pow(1 + monthlyRate, tenure) - 1));\r\n      const totalAmount = emi * tenure;\r\n      const totalInterest = totalAmount - recommendedAmount;\r\n      \r\n      return { tenure, emi, total_interest: totalInterest, total_amount: totalAmount };\r\n    }).filter(option => option.emi <= maxEMICapacity);\r\n    \r\n    return {\r\n      eligible: maxAmount > 10000 && emiOptions.length > 0,\r\n      max_amount: maxAmount,\r\n      recommended_amount: recommendedAmount,\r\n      tenure_options: tenureOptions,\r\n      interest_rate_range: { min: interestRate, max: interestRate + 2 },\r\n      emi_options: emiOptions\r\n    };\r\n  }\r\n  \r\n  // Interest Rate Based on Credit Score\r\n  static getInterestRate(creditScore: number): number {\r\n    if (creditScore >= 750) return 18;\r\n    if (creditScore >= 650) return 22;\r\n    if (creditScore >= 550) return 24;\r\n    return 26; // RBI cap\r\n  }\r\n  \r\n  // Generate Personalized Recommendations\r\n  static generateRecommendations(userData: UserData, profile: FinancialProfile) {\r\n    const immediate: string[] = [];\r\n    const coaching: Array<{priority: 'high' | 'medium' | 'low'; action: string; impact: string}> = [];\r\n    \r\n    // Payment History Improvements\r\n    if (userData.overall_bill_payment_score < 80) {\r\n      immediate.push(\"Set up auto-pay for all utility bills to improve payment consistency\");\r\n      coaching.push({\r\n        priority: 'high',\r\n        action: \"Enable auto-debit for electricity, DTH, and internet bills\",\r\n        impact: \"Can improve credit score by 30-50 points in 3 months\"\r\n      });\r\n    }\r\n    \r\n    // EMI Management\r\n    const emiRatio = userData.existing_loan_emi / userData.monthly_income;\r\n    if (emiRatio > 0.4) {\r\n      immediate.push(`Your EMI-to-income ratio is ${Math.round(emiRatio * 100)}% (too high). Reduce EMIs below 40% to improve score`);\r\n      coaching.push({\r\n        priority: 'high',\r\n        action: \"Consider loan restructuring or prepayment to reduce EMI burden\",\r\n        impact: \"Reducing EMI ratio to 30% can improve eligibility by â‚¹25,000\"\r\n      });\r\n    }\r\n    \r\n    // Digital Behavior\r\n    if (userData.upi_transactions_per_month < 20) {\r\n      immediate.push(\"Increase UPI transactions to build stronger digital payment history\");\r\n      coaching.push({\r\n        priority: 'medium',\r\n        action: \"Use UPI for daily transactions like groceries, fuel, and small purchases\",\r\n        impact: \"Higher digital activity can boost score by 15-25 points\"\r\n      });\r\n    }\r\n    \r\n    // Emergency Savings\r\n    if (userData.emergency_savings < userData.monthly_expenses * 3) {\r\n      immediate.push(`Build emergency fund to â‚¹${userData.monthly_expenses * 3} (3 months expenses)`);\r\n      coaching.push({\r\n        priority: 'medium',\r\n        action: `Save â‚¹${Math.round((userData.monthly_expenses * 3 - userData.emergency_savings) / 6)} per month for 6 months`,\r\n        impact: \"Adequate emergency fund reduces default risk and improves loan terms\"\r\n      });\r\n    }\r\n    \r\n    // Savings Rate\r\n    if (userData.savings_rate < 20) {\r\n      immediate.push(\"Increase savings rate to at least 20% of income for better financial health\");\r\n      coaching.push({\r\n        priority: 'low',\r\n        action: \"Track expenses and identify areas to cut discretionary spending\",\r\n        impact: \"Higher savings rate demonstrates financial discipline\"\r\n      });\r\n    }\r\n    \r\n    return { immediate, coaching };\r\n  }\r\n  \r\n  // Build Financial Profile\r\n  static buildFinancialProfile(userData: UserData): FinancialProfile {\r\n    return {\r\n      debt_to_income_ratio: (userData.existing_loan_emi * 12) / (userData.monthly_income * 12),\r\n      savings_to_income_ratio: userData.savings_rate / 100,\r\n      expense_to_income_ratio: userData.monthly_expenses / userData.monthly_income,\r\n      \r\n      payment_consistency_score: userData.overall_bill_payment_score,\r\n      bill_payment_reliability: (userData.electricity_bill_on_time + userData.dth_recharge_on_time + \r\n                                userData.internet_bill_on_time + userData.rent_payment_on_time) / 4,\r\n      loan_repayment_track_record: userData.loan_repayment_history_score,\r\n      \r\n      digital_payment_adoption: userData.digital_financial_activity_score,\r\n      financial_app_usage: userData.digital_wallet_usage,\r\n      online_banking_activity: userData.online_bill_payments,\r\n      \r\n      income_volatility: userData.income_type === 'salary' ? 10 : \r\n                        userData.income_type === 'business' ? 30 : 50,\r\n      emergency_fund_adequacy: (userData.emergency_savings / userData.monthly_expenses) * 33.33,\r\n      credit_utilization_pattern: (userData.credit_card_outstanding / userData.monthly_income) * 100\r\n    };\r\n  }\r\n  \r\n  // Calculate Percentile Rank\r\n  static calculatePercentileRank(creditScore: number): number {\r\n    // Simulated distribution based on Indian credit score patterns\r\n    if (creditScore >= 800) return 95;\r\n    if (creditScore >= 750) return 85;\r\n    if (creditScore >= 700) return 70;\r\n    if (creditScore >= 650) return 55;\r\n    if (creditScore >= 600) return 40;\r\n    if (creditScore >= 550) return 25;\r\n    return 10;\r\n  }\r\n  \r\n  // Generate Peer Comparison\r\n  static generatePeerComparison(percentileRank: number, userData: UserData): string {\r\n    const incomeGroup = userData.monthly_income >= 50000 ? 'high-income' :\r\n                       userData.monthly_income >= 25000 ? 'middle-income' : 'entry-level';\r\n    \r\n    return `You are better than ${percentileRank}% of borrowers in the ${incomeGroup} category`;\r\n  }\r\n  \r\n  // Decision Making\r\n  static makeDecision(creditScore: number, defaultProbability: number): 'Approve' | 'Review' | 'Reject' {\r\n    if (creditScore >= 650 && defaultProbability <= 20) return 'Approve';\r\n    if (creditScore >= 550 && defaultProbability <= 35) return 'Review';\r\n    return 'Reject';\r\n  }\r\n  \r\n  // RBI Compliance Check\r\n  static checkRBICompliance(userData: UserData, loanAmount: number): boolean {\r\n    if (loanAmount > 125000) return false; // RBI limit\r\n    if ((userData.existing_loan_emi / userData.monthly_income) > 0.5) return false; // EMI ratio\r\n    return true;\r\n  }\r\n  \r\n  // RBI Violations\r\n  static getRBIViolations(userData: UserData, loanAmount: number): string[] {\r\n    const violations: string[] = [];\r\n    \r\n    if (loanAmount > 125000) violations.push('Loan amount exceeds RBI limit of â‚¹1.25L');\r\n    if ((userData.existing_loan_emi / userData.monthly_income) > 0.5) violations.push('EMI-to-income ratio exceeds 50%');\r\n    \r\n    return violations;\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}